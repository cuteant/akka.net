<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using System;
using System.Threading.Tasks;

<# var count = 7; #>
namespace Akka.Dispatch
{
    partial class ActorTaskScheduler
    {
<# for (int i = 1; i <= count; i++) {
    var types = string.Join(", ", Enumerable.Range(1, i).Select(x => "TArg" + x));
    var arguments = string.Join(", ", Enumerable.Range(1, i).Select(x => "arg" + x));
    var typeAndArguments = string.Join(", ", Enumerable.Range(1, i).Select(x => "TArg" + x + " arg" + x));
#>
        /// <summary>TBD</summary>
        public static void RunTask<<#= types #>>(Action<<#= types #>> action, <#= typeAndArguments #>)
        {
            RunTask(Runnable.Create(action, <#= arguments #>));
        }

        /// <summary>TBD</summary>
        public static void RunTask<<#= types #>>(Func<<#= types #>, Task> asyncAction, <#= typeAndArguments #>)
        {
            RunTask(Runnable.CreateTask(asyncAction, <#= arguments #>));
        }

<# } #>
    }
}
