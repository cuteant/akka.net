<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using System;

<# var count = 7; #>
namespace Akka.Dispatch
{
    public static class AbstractDispatcherExtensions
    {
        /// <summary>Schedules the specified delegate.</summary>
        public static void Schedule(this MessageDispatcher dispatcher, Action run)
        {
            dispatcher.Schedule(Runnable.Create(run));
        }

<# for (int i = 1; i <= count; i++) {
    var types = string.Join(", ", Enumerable.Range(1, i).Select(x => "TArg" + x));
    var arguments = string.Join(", ", Enumerable.Range(1, i).Select(x => "arg" + x));
    var typeAndArguments = string.Join(", ", Enumerable.Range(1, i).Select(x => "TArg" + x + " arg" + x));
#>
        /// <summary>Schedules the specified delegate.</summary>
        public static void Schedule<<#= types #>>(this MessageDispatcher dispatcher, Action<<#= types #>> run, <#= typeAndArguments #>)
        {
            dispatcher.Schedule(Runnable.Create(run, <#= arguments #>));
        }
<# } #>
    }
}
