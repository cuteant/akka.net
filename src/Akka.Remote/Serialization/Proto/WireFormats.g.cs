// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WireFormats.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Akka.Remote.Serialization.Proto.Msg {

  /// <summary>Holder for reflection information generated from WireFormats.proto</summary>
  public static partial class WireFormatsReflection {

    #region Descriptor
    /// <summary>File descriptor for WireFormats.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WireFormatsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFXaXJlRm9ybWF0cy5wcm90bxIjQWtrYS5SZW1vdGUuU2VyaWFsaXphdGlv",
            "bi5Qcm90by5Nc2caFkNvbnRhaW5lckZvcm1hdHMucHJvdG8aHmdvb2dsZS9w",
            "cm90b2J1Zi9kdXJhdGlvbi5wcm90byKnAQoXQWNrQW5kRW52ZWxvcGVDb250",
            "YWluZXISRQoDYWNrGAEgASgLMjguQWtrYS5SZW1vdGUuU2VyaWFsaXphdGlv",
            "bi5Qcm90by5Nc2cuQWNrbm93bGVkZ2VtZW50SW5mbxJFCghlbnZlbG9wZRgC",
            "IAEoCzIzLkFra2EuUmVtb3RlLlNlcmlhbGl6YXRpb24uUHJvdG8uTXNnLlJl",
            "bW90ZUVudmVsb3BlIuUBCg5SZW1vdGVFbnZlbG9wZRJECglyZWNpcGllbnQY",
            "ASABKAsyMS5Ba2thLlJlbW90ZS5TZXJpYWxpemF0aW9uLlByb3RvLk1zZy5B",
            "Y3RvclJlZkRhdGESPQoHbWVzc2FnZRgCIAEoCzIsLkFra2EuUmVtb3RlLlNl",
            "cmlhbGl6YXRpb24uUHJvdG8uTXNnLlBheWxvYWQSQQoGc2VuZGVyGAQgASgL",
            "MjEuQWtrYS5SZW1vdGUuU2VyaWFsaXphdGlvbi5Qcm90by5Nc2cuQWN0b3JS",
            "ZWZEYXRhEgsKA3NlcRgFIAEoBiI7ChNBY2tub3dsZWRnZW1lbnRJbmZvEhUK",
            "DWN1bXVsYXRpdmVBY2sYASABKAYSDQoFbmFja3MYAiADKAYi6gEKE0RhZW1v",
            "bk1zZ0NyZWF0ZURhdGESPQoFcHJvcHMYASABKAsyLi5Ba2thLlJlbW90ZS5T",
            "ZXJpYWxpemF0aW9uLlByb3RvLk1zZy5Qcm9wc0RhdGESPwoGZGVwbG95GAIg",
            "ASgLMi8uQWtrYS5SZW1vdGUuU2VyaWFsaXphdGlvbi5Qcm90by5Nc2cuRGVw",
            "bG95RGF0YRIMCgRwYXRoGAMgASgJEkUKCnN1cGVydmlzb3IYBCABKAsyMS5B",
            "a2thLlJlbW90ZS5TZXJpYWxpemF0aW9uLlByb3RvLk1zZy5BY3RvclJlZkRh",
            "dGEilwEKCVByb3BzRGF0YRI/CgZkZXBsb3kYASABKAsyLy5Ba2thLlJlbW90",
            "ZS5TZXJpYWxpemF0aW9uLlByb3RvLk1zZy5EZXBsb3lEYXRhEg0KBWNsYXp6",
            "GAIgASgJEjoKBGFyZ3MYAyADKAsyLC5Ba2thLlJlbW90ZS5TZXJpYWxpemF0",
            "aW9uLlByb3RvLk1zZy5QYXlsb2FkIu0BCgpEZXBsb3lEYXRhEgwKBHBhdGgY",
            "ASABKAkSPAoGY29uZmlnGAIgASgLMiwuQWtrYS5SZW1vdGUuU2VyaWFsaXph",
            "dGlvbi5Qcm90by5Nc2cuUGF5bG9hZBJCCgxyb3V0ZXJDb25maWcYAyABKAsy",
            "LC5Ba2thLlJlbW90ZS5TZXJpYWxpemF0aW9uLlByb3RvLk1zZy5QYXlsb2Fk",
            "EjsKBXNjb3BlGAQgASgLMiwuQWtrYS5SZW1vdGUuU2VyaWFsaXphdGlvbi5Q",
            "cm90by5Nc2cuUGF5bG9hZBISCgpkaXNwYXRjaGVyGAUgASgJInQKE0Fra2FQ",
            "cm90b2NvbE1lc3NhZ2USDwoHcGF5bG9hZBgBIAEoDBJMCgtpbnN0cnVjdGlv",
            "bhgCIAEoCzI3LkFra2EuUmVtb3RlLlNlcmlhbGl6YXRpb24uUHJvdG8uTXNn",
            "LkFra2FDb250cm9sTWVzc2FnZSKqAQoSQWtrYUNvbnRyb2xNZXNzYWdlEkUK",
            "C2NvbW1hbmRUeXBlGAEgASgOMjAuQWtrYS5SZW1vdGUuU2VyaWFsaXphdGlv",
            "bi5Qcm90by5Nc2cuQ29tbWFuZFR5cGUSTQoNaGFuZHNoYWtlSW5mbxgCIAEo",
            "CzI2LkFra2EuUmVtb3RlLlNlcmlhbGl6YXRpb24uUHJvdG8uTXNnLkFra2FI",
            "YW5kc2hha2VJbmZvInIKEUFra2FIYW5kc2hha2VJbmZvEkAKBm9yaWdpbhgB",
            "IAEoCzIwLkFra2EuUmVtb3RlLlNlcmlhbGl6YXRpb24uUHJvdG8uTXNnLkFk",
            "ZHJlc3NEYXRhEgsKA3VpZBgCIAEoBhIOCgZjb29raWUYAyABKAkiTQoLUmVt",
            "b3RlU2NvcGUSPgoEbm9kZRgBIAEoCzIwLkFra2EuUmVtb3RlLlNlcmlhbGl6",
            "YXRpb24uUHJvdG8uTXNnLkFkZHJlc3NEYXRhIrEBCg5EZWZhdWx0UmVzaXpl",
            "chISCgpsb3dlckJvdW5kGAEgASgNEhIKCnVwcGVyQm91bmQYAiABKA0SGQoR",
            "cHJlc3N1cmVUaHJlc2hvbGQYAyABKA0SEgoKcmFtcHVwUmF0ZRgEIAEoARIY",
            "ChBiYWNrb2ZmVGhyZXNob2xkGAUgASgBEhMKC2JhY2tvZmZSYXRlGAYgASgB",
            "EhkKEW1lc3NhZ2VzUGVyUmVzaXplGAcgASgNImUKCkZyb21Db25maWcSPQoH",
            "cmVzaXplchgBIAEoCzIsLkFra2EuUmVtb3RlLlNlcmlhbGl6YXRpb24uUHJv",
            "dG8uTXNnLlBheWxvYWQSGAoQcm91dGVyRGlzcGF0Y2hlchgCIAEoCSKfAQoS",
            "R2VuZXJpY1JvdXRpbmdQb29sEhUKDW5yT2ZJbnN0YW5jZXMYASABKA0SGAoQ",
            "cm91dGVyRGlzcGF0Y2hlchgCIAEoCRIZChF1c2VQb29sRGlzcGF0Y2hlchgD",
            "IAEoCBI9CgdyZXNpemVyGAQgASgLMiwuQWtrYS5SZW1vdGUuU2VyaWFsaXph",
            "dGlvbi5Qcm90by5Nc2cuUGF5bG9hZCKIAQoRU2NhdHRlckdhdGhlclBvb2wS",
            "SAoHZ2VuZXJpYxgBIAEoCzI3LkFra2EuUmVtb3RlLlNlcmlhbGl6YXRpb24u",
            "UHJvdG8uTXNnLkdlbmVyaWNSb3V0aW5nUG9vbBIpCgZ3aXRoaW4YAiABKAsy",
            "GS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24itAEKEFRhaWxDaG9wcGluZ1Bv",
            "b2wSSAoHZ2VuZXJpYxgBIAEoCzI3LkFra2EuUmVtb3RlLlNlcmlhbGl6YXRp",
            "b24uUHJvdG8uTXNnLkdlbmVyaWNSb3V0aW5nUG9vbBIpCgZ3aXRoaW4YAiAB",
            "KAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24SKwoIaW50ZXJ2YWwYAyAB",
            "KAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24ikgEKElJlbW90ZVJvdXRl",
            "ckNvbmZpZxI7CgVsb2NhbBgBIAEoCzIsLkFra2EuUmVtb3RlLlNlcmlhbGl6",
            "YXRpb24uUHJvdG8uTXNnLlBheWxvYWQSPwoFbm9kZXMYAiADKAsyMC5Ba2th",
            "LlJlbW90ZS5TZXJpYWxpemF0aW9uLlByb3RvLk1zZy5BZGRyZXNzRGF0YSqF",
            "AQoLQ29tbWFuZFR5cGUSCAoETk9ORRAAEg0KCUFTU09DSUFURRABEhAKDERJ",
            "U0FTU09DSUFURRACEg0KCUhFQVJUQkVBVBADEh4KGkRJU0FTU09DSUFURV9T",
            "SFVUVElOR19ET1dOEAQSHAoYRElTQVNTT0NJQVRFX1FVQVJBTlRJTkVEEAVi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Akka.Remote.Serialization.Proto.Msg.ContainerFormatsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Akka.Remote.Serialization.Proto.Msg.CommandType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Akka.Remote.Serialization.Proto.Msg.AckAndEnvelopeContainer), global::Akka.Remote.Serialization.Proto.Msg.AckAndEnvelopeContainer.Parser, new[]{ "Ack", "Envelope" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Akka.Remote.Serialization.Proto.Msg.RemoteEnvelope), global::Akka.Remote.Serialization.Proto.Msg.RemoteEnvelope.Parser, new[]{ "Recipient", "Message", "Sender", "Seq" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Akka.Remote.Serialization.Proto.Msg.AcknowledgementInfo), global::Akka.Remote.Serialization.Proto.Msg.AcknowledgementInfo.Parser, new[]{ "CumulativeAck", "Nacks" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Akka.Remote.Serialization.Proto.Msg.DaemonMsgCreateData), global::Akka.Remote.Serialization.Proto.Msg.DaemonMsgCreateData.Parser, new[]{ "Props", "Deploy", "Path", "Supervisor" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Akka.Remote.Serialization.Proto.Msg.PropsData), global::Akka.Remote.Serialization.Proto.Msg.PropsData.Parser, new[]{ "Deploy", "Clazz", "Args" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Akka.Remote.Serialization.Proto.Msg.DeployData), global::Akka.Remote.Serialization.Proto.Msg.DeployData.Parser, new[]{ "Path", "Config", "RouterConfig", "Scope", "Dispatcher" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Akka.Remote.Serialization.Proto.Msg.AkkaProtocolMessage), global::Akka.Remote.Serialization.Proto.Msg.AkkaProtocolMessage.Parser, new[]{ "Payload", "Instruction" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Akka.Remote.Serialization.Proto.Msg.AkkaControlMessage), global::Akka.Remote.Serialization.Proto.Msg.AkkaControlMessage.Parser, new[]{ "CommandType", "HandshakeInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Akka.Remote.Serialization.Proto.Msg.AkkaHandshakeInfo), global::Akka.Remote.Serialization.Proto.Msg.AkkaHandshakeInfo.Parser, new[]{ "Origin", "Uid", "Cookie" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Akka.Remote.Serialization.Proto.Msg.RemoteScope), global::Akka.Remote.Serialization.Proto.Msg.RemoteScope.Parser, new[]{ "Node" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Akka.Remote.Serialization.Proto.Msg.DefaultResizer), global::Akka.Remote.Serialization.Proto.Msg.DefaultResizer.Parser, new[]{ "LowerBound", "UpperBound", "PressureThreshold", "RampupRate", "BackoffThreshold", "BackoffRate", "MessagesPerResize" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Akka.Remote.Serialization.Proto.Msg.FromConfig), global::Akka.Remote.Serialization.Proto.Msg.FromConfig.Parser, new[]{ "Resizer", "RouterDispatcher" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Akka.Remote.Serialization.Proto.Msg.GenericRoutingPool), global::Akka.Remote.Serialization.Proto.Msg.GenericRoutingPool.Parser, new[]{ "NrOfInstances", "RouterDispatcher", "UsePoolDispatcher", "Resizer" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Akka.Remote.Serialization.Proto.Msg.ScatterGatherPool), global::Akka.Remote.Serialization.Proto.Msg.ScatterGatherPool.Parser, new[]{ "Generic", "Within" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Akka.Remote.Serialization.Proto.Msg.TailChoppingPool), global::Akka.Remote.Serialization.Proto.Msg.TailChoppingPool.Parser, new[]{ "Generic", "Within", "Interval" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Akka.Remote.Serialization.Proto.Msg.RemoteRouterConfig), global::Akka.Remote.Serialization.Proto.Msg.RemoteRouterConfig.Parser, new[]{ "Local", "Nodes" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Defines the type of the AkkaControlMessage command type
  /// </summary>
  public enum CommandType {
    [pbr::OriginalName("NONE")] None = 0,
    [pbr::OriginalName("ASSOCIATE")] Associate = 1,
    [pbr::OriginalName("DISASSOCIATE")] Disassociate = 2,
    [pbr::OriginalName("HEARTBEAT")] Heartbeat = 3,
    /// <summary>
    /// Remote system is going down and will not accepts new connections
    /// </summary>
    [pbr::OriginalName("DISASSOCIATE_SHUTTING_DOWN")] DisassociateShuttingDown = 4,
    /// <summary>
    /// Remote system refused the association since the current system is quarantined
    /// </summary>
    [pbr::OriginalName("DISASSOCIATE_QUARANTINED")] DisassociateQuarantined = 5,
  }

  #endregion

  #region Messages
  public sealed partial class AckAndEnvelopeContainer : pb::IMessage<AckAndEnvelopeContainer> {
    private static readonly pb::MessageParser<AckAndEnvelopeContainer> _parser = new pb::MessageParser<AckAndEnvelopeContainer>(() => new AckAndEnvelopeContainer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AckAndEnvelopeContainer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Akka.Remote.Serialization.Proto.Msg.WireFormatsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AckAndEnvelopeContainer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AckAndEnvelopeContainer(AckAndEnvelopeContainer other) : this() {
      Ack = other.ack_ != null ? other.Ack.Clone() : null;
      Envelope = other.envelope_ != null ? other.Envelope.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AckAndEnvelopeContainer Clone() {
      return new AckAndEnvelopeContainer(this);
    }

    /// <summary>Field number for the "ack" field.</summary>
    public const int AckFieldNumber = 1;
    private global::Akka.Remote.Serialization.Proto.Msg.AcknowledgementInfo ack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Akka.Remote.Serialization.Proto.Msg.AcknowledgementInfo Ack {
      get { return ack_; }
      set {
        ack_ = value;
      }
    }

    /// <summary>Field number for the "envelope" field.</summary>
    public const int EnvelopeFieldNumber = 2;
    private global::Akka.Remote.Serialization.Proto.Msg.RemoteEnvelope envelope_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Akka.Remote.Serialization.Proto.Msg.RemoteEnvelope Envelope {
      get { return envelope_; }
      set {
        envelope_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AckAndEnvelopeContainer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AckAndEnvelopeContainer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ack, other.Ack)) return false;
      if (!object.Equals(Envelope, other.Envelope)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ack_ != null) hash ^= Ack.GetHashCode();
      if (envelope_ != null) hash ^= Envelope.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ack_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ack);
      }
      if (envelope_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Envelope);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ack);
      }
      if (envelope_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Envelope);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AckAndEnvelopeContainer other) {
      if (other == null) {
        return;
      }
      if (other.ack_ != null) {
        if (ack_ == null) {
          ack_ = new global::Akka.Remote.Serialization.Proto.Msg.AcknowledgementInfo();
        }
        Ack.MergeFrom(other.Ack);
      }
      if (other.envelope_ != null) {
        if (envelope_ == null) {
          envelope_ = new global::Akka.Remote.Serialization.Proto.Msg.RemoteEnvelope();
        }
        Envelope.MergeFrom(other.Envelope);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ack_ == null) {
              ack_ = new global::Akka.Remote.Serialization.Proto.Msg.AcknowledgementInfo();
            }
            input.ReadMessage(ack_);
            break;
          }
          case 18: {
            if (envelope_ == null) {
              envelope_ = new global::Akka.Remote.Serialization.Proto.Msg.RemoteEnvelope();
            }
            input.ReadMessage(envelope_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Defines a remote message.
  /// </summary>
  public sealed partial class RemoteEnvelope : pb::IMessage<RemoteEnvelope> {
    private static readonly pb::MessageParser<RemoteEnvelope> _parser = new pb::MessageParser<RemoteEnvelope>(() => new RemoteEnvelope());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoteEnvelope> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Akka.Remote.Serialization.Proto.Msg.WireFormatsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoteEnvelope() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoteEnvelope(RemoteEnvelope other) : this() {
      Recipient = other.recipient_ != null ? other.Recipient.Clone() : null;
      Message = other.message_ != null ? other.Message.Clone() : null;
      Sender = other.sender_ != null ? other.Sender.Clone() : null;
      seq_ = other.seq_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoteEnvelope Clone() {
      return new RemoteEnvelope(this);
    }

    /// <summary>Field number for the "recipient" field.</summary>
    public const int RecipientFieldNumber = 1;
    private global::Akka.Remote.Serialization.Proto.Msg.ActorRefData recipient_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Akka.Remote.Serialization.Proto.Msg.ActorRefData Recipient {
      get { return recipient_; }
      set {
        recipient_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private global::Akka.Remote.Serialization.Proto.Msg.Payload message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Akka.Remote.Serialization.Proto.Msg.Payload Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 4;
    private global::Akka.Remote.Serialization.Proto.Msg.ActorRefData sender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Akka.Remote.Serialization.Proto.Msg.ActorRefData Sender {
      get { return sender_; }
      set {
        sender_ = value;
      }
    }

    /// <summary>Field number for the "seq" field.</summary>
    public const int SeqFieldNumber = 5;
    private ulong seq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Seq {
      get { return seq_; }
      set {
        seq_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoteEnvelope);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoteEnvelope other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Recipient, other.Recipient)) return false;
      if (!object.Equals(Message, other.Message)) return false;
      if (!object.Equals(Sender, other.Sender)) return false;
      if (Seq != other.Seq) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (recipient_ != null) hash ^= Recipient.GetHashCode();
      if (message_ != null) hash ^= Message.GetHashCode();
      if (sender_ != null) hash ^= Sender.GetHashCode();
      if (Seq != 0UL) hash ^= Seq.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (recipient_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Recipient);
      }
      if (message_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Message);
      }
      if (sender_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Sender);
      }
      if (Seq != 0UL) {
        output.WriteRawTag(41);
        output.WriteFixed64(Seq);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (recipient_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Recipient);
      }
      if (message_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (sender_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sender);
      }
      if (Seq != 0UL) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoteEnvelope other) {
      if (other == null) {
        return;
      }
      if (other.recipient_ != null) {
        if (recipient_ == null) {
          recipient_ = new global::Akka.Remote.Serialization.Proto.Msg.ActorRefData();
        }
        Recipient.MergeFrom(other.Recipient);
      }
      if (other.message_ != null) {
        if (message_ == null) {
          message_ = new global::Akka.Remote.Serialization.Proto.Msg.Payload();
        }
        Message.MergeFrom(other.Message);
      }
      if (other.sender_ != null) {
        if (sender_ == null) {
          sender_ = new global::Akka.Remote.Serialization.Proto.Msg.ActorRefData();
        }
        Sender.MergeFrom(other.Sender);
      }
      if (other.Seq != 0UL) {
        Seq = other.Seq;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (recipient_ == null) {
              recipient_ = new global::Akka.Remote.Serialization.Proto.Msg.ActorRefData();
            }
            input.ReadMessage(recipient_);
            break;
          }
          case 18: {
            if (message_ == null) {
              message_ = new global::Akka.Remote.Serialization.Proto.Msg.Payload();
            }
            input.ReadMessage(message_);
            break;
          }
          case 34: {
            if (sender_ == null) {
              sender_ = new global::Akka.Remote.Serialization.Proto.Msg.ActorRefData();
            }
            input.ReadMessage(sender_);
            break;
          }
          case 41: {
            Seq = input.ReadFixed64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AcknowledgementInfo : pb::IMessage<AcknowledgementInfo> {
    private static readonly pb::MessageParser<AcknowledgementInfo> _parser = new pb::MessageParser<AcknowledgementInfo>(() => new AcknowledgementInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AcknowledgementInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Akka.Remote.Serialization.Proto.Msg.WireFormatsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcknowledgementInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcknowledgementInfo(AcknowledgementInfo other) : this() {
      cumulativeAck_ = other.cumulativeAck_;
      nacks_ = other.nacks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcknowledgementInfo Clone() {
      return new AcknowledgementInfo(this);
    }

    /// <summary>Field number for the "cumulativeAck" field.</summary>
    public const int CumulativeAckFieldNumber = 1;
    private ulong cumulativeAck_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CumulativeAck {
      get { return cumulativeAck_; }
      set {
        cumulativeAck_ = value;
      }
    }

    /// <summary>Field number for the "nacks" field.</summary>
    public const int NacksFieldNumber = 2;
    private static readonly pb::FieldCodec<ulong> _repeated_nacks_codec
        = pb::FieldCodec.ForFixed64(18);
    private readonly pbc::RepeatedField<ulong> nacks_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> Nacks {
      get { return nacks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AcknowledgementInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AcknowledgementInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CumulativeAck != other.CumulativeAck) return false;
      if(!nacks_.Equals(other.nacks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CumulativeAck != 0UL) hash ^= CumulativeAck.GetHashCode();
      hash ^= nacks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CumulativeAck != 0UL) {
        output.WriteRawTag(9);
        output.WriteFixed64(CumulativeAck);
      }
      nacks_.WriteTo(output, _repeated_nacks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CumulativeAck != 0UL) {
        size += 1 + 8;
      }
      size += nacks_.CalculateSize(_repeated_nacks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AcknowledgementInfo other) {
      if (other == null) {
        return;
      }
      if (other.CumulativeAck != 0UL) {
        CumulativeAck = other.CumulativeAck;
      }
      nacks_.Add(other.nacks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            CumulativeAck = input.ReadFixed64();
            break;
          }
          case 18:
          case 17: {
            nacks_.AddEntriesFrom(input, _repeated_nacks_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Defines Akka.Remote.DaemonMsgCreate
  /// </summary>
  public sealed partial class DaemonMsgCreateData : pb::IMessage<DaemonMsgCreateData> {
    private static readonly pb::MessageParser<DaemonMsgCreateData> _parser = new pb::MessageParser<DaemonMsgCreateData>(() => new DaemonMsgCreateData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DaemonMsgCreateData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Akka.Remote.Serialization.Proto.Msg.WireFormatsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonMsgCreateData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonMsgCreateData(DaemonMsgCreateData other) : this() {
      Props = other.props_ != null ? other.Props.Clone() : null;
      Deploy = other.deploy_ != null ? other.Deploy.Clone() : null;
      path_ = other.path_;
      Supervisor = other.supervisor_ != null ? other.Supervisor.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaemonMsgCreateData Clone() {
      return new DaemonMsgCreateData(this);
    }

    /// <summary>Field number for the "props" field.</summary>
    public const int PropsFieldNumber = 1;
    private global::Akka.Remote.Serialization.Proto.Msg.PropsData props_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Akka.Remote.Serialization.Proto.Msg.PropsData Props {
      get { return props_; }
      set {
        props_ = value;
      }
    }

    /// <summary>Field number for the "deploy" field.</summary>
    public const int DeployFieldNumber = 2;
    private global::Akka.Remote.Serialization.Proto.Msg.DeployData deploy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Akka.Remote.Serialization.Proto.Msg.DeployData Deploy {
      get { return deploy_; }
      set {
        deploy_ = value;
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 3;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "supervisor" field.</summary>
    public const int SupervisorFieldNumber = 4;
    private global::Akka.Remote.Serialization.Proto.Msg.ActorRefData supervisor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Akka.Remote.Serialization.Proto.Msg.ActorRefData Supervisor {
      get { return supervisor_; }
      set {
        supervisor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DaemonMsgCreateData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DaemonMsgCreateData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Props, other.Props)) return false;
      if (!object.Equals(Deploy, other.Deploy)) return false;
      if (Path != other.Path) return false;
      if (!object.Equals(Supervisor, other.Supervisor)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (props_ != null) hash ^= Props.GetHashCode();
      if (deploy_ != null) hash ^= Deploy.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (supervisor_ != null) hash ^= Supervisor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (props_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Props);
      }
      if (deploy_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Deploy);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Path);
      }
      if (supervisor_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Supervisor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (props_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Props);
      }
      if (deploy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Deploy);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (supervisor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Supervisor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DaemonMsgCreateData other) {
      if (other == null) {
        return;
      }
      if (other.props_ != null) {
        if (props_ == null) {
          props_ = new global::Akka.Remote.Serialization.Proto.Msg.PropsData();
        }
        Props.MergeFrom(other.Props);
      }
      if (other.deploy_ != null) {
        if (deploy_ == null) {
          deploy_ = new global::Akka.Remote.Serialization.Proto.Msg.DeployData();
        }
        Deploy.MergeFrom(other.Deploy);
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.supervisor_ != null) {
        if (supervisor_ == null) {
          supervisor_ = new global::Akka.Remote.Serialization.Proto.Msg.ActorRefData();
        }
        Supervisor.MergeFrom(other.Supervisor);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (props_ == null) {
              props_ = new global::Akka.Remote.Serialization.Proto.Msg.PropsData();
            }
            input.ReadMessage(props_);
            break;
          }
          case 18: {
            if (deploy_ == null) {
              deploy_ = new global::Akka.Remote.Serialization.Proto.Msg.DeployData();
            }
            input.ReadMessage(deploy_);
            break;
          }
          case 26: {
            Path = input.ReadString();
            break;
          }
          case 34: {
            if (supervisor_ == null) {
              supervisor_ = new global::Akka.Remote.Serialization.Proto.Msg.ActorRefData();
            }
            input.ReadMessage(supervisor_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Serialization of Akka.Actor.Props
  /// </summary>
  public sealed partial class PropsData : pb::IMessage<PropsData> {
    private static readonly pb::MessageParser<PropsData> _parser = new pb::MessageParser<PropsData>(() => new PropsData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PropsData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Akka.Remote.Serialization.Proto.Msg.WireFormatsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropsData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropsData(PropsData other) : this() {
      Deploy = other.deploy_ != null ? other.Deploy.Clone() : null;
      clazz_ = other.clazz_;
      args_ = other.args_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropsData Clone() {
      return new PropsData(this);
    }

    /// <summary>Field number for the "deploy" field.</summary>
    public const int DeployFieldNumber = 1;
    private global::Akka.Remote.Serialization.Proto.Msg.DeployData deploy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Akka.Remote.Serialization.Proto.Msg.DeployData Deploy {
      get { return deploy_; }
      set {
        deploy_ = value;
      }
    }

    /// <summary>Field number for the "clazz" field.</summary>
    public const int ClazzFieldNumber = 2;
    private string clazz_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Clazz {
      get { return clazz_; }
      set {
        clazz_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "args" field.</summary>
    public const int ArgsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Akka.Remote.Serialization.Proto.Msg.Payload> _repeated_args_codec
        = pb::FieldCodec.ForMessage(26, global::Akka.Remote.Serialization.Proto.Msg.Payload.Parser);
    private readonly pbc::RepeatedField<global::Akka.Remote.Serialization.Proto.Msg.Payload> args_ = new pbc::RepeatedField<global::Akka.Remote.Serialization.Proto.Msg.Payload>();
    /// <summary>
    /// serialized props parameters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Akka.Remote.Serialization.Proto.Msg.Payload> Args {
      get { return args_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PropsData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PropsData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Deploy, other.Deploy)) return false;
      if (Clazz != other.Clazz) return false;
      if(!args_.Equals(other.args_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (deploy_ != null) hash ^= Deploy.GetHashCode();
      if (Clazz.Length != 0) hash ^= Clazz.GetHashCode();
      hash ^= args_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (deploy_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Deploy);
      }
      if (Clazz.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Clazz);
      }
      args_.WriteTo(output, _repeated_args_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (deploy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Deploy);
      }
      if (Clazz.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clazz);
      }
      size += args_.CalculateSize(_repeated_args_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PropsData other) {
      if (other == null) {
        return;
      }
      if (other.deploy_ != null) {
        if (deploy_ == null) {
          deploy_ = new global::Akka.Remote.Serialization.Proto.Msg.DeployData();
        }
        Deploy.MergeFrom(other.Deploy);
      }
      if (other.Clazz.Length != 0) {
        Clazz = other.Clazz;
      }
      args_.Add(other.args_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (deploy_ == null) {
              deploy_ = new global::Akka.Remote.Serialization.Proto.Msg.DeployData();
            }
            input.ReadMessage(deploy_);
            break;
          }
          case 18: {
            Clazz = input.ReadString();
            break;
          }
          case 26: {
            args_.AddEntriesFrom(input, _repeated_args_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Serialization of akka.actor.Deploy
  /// </summary>
  public sealed partial class DeployData : pb::IMessage<DeployData> {
    private static readonly pb::MessageParser<DeployData> _parser = new pb::MessageParser<DeployData>(() => new DeployData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeployData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Akka.Remote.Serialization.Proto.Msg.WireFormatsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployData(DeployData other) : this() {
      path_ = other.path_;
      Config = other.config_ != null ? other.Config.Clone() : null;
      RouterConfig = other.routerConfig_ != null ? other.RouterConfig.Clone() : null;
      Scope = other.scope_ != null ? other.Scope.Clone() : null;
      dispatcher_ = other.dispatcher_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployData Clone() {
      return new DeployData(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Akka.Remote.Serialization.Proto.Msg.Payload config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Akka.Remote.Serialization.Proto.Msg.Payload Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "routerConfig" field.</summary>
    public const int RouterConfigFieldNumber = 3;
    private global::Akka.Remote.Serialization.Proto.Msg.Payload routerConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Akka.Remote.Serialization.Proto.Msg.Payload RouterConfig {
      get { return routerConfig_; }
      set {
        routerConfig_ = value;
      }
    }

    /// <summary>Field number for the "scope" field.</summary>
    public const int ScopeFieldNumber = 4;
    private global::Akka.Remote.Serialization.Proto.Msg.Payload scope_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Akka.Remote.Serialization.Proto.Msg.Payload Scope {
      get { return scope_; }
      set {
        scope_ = value;
      }
    }

    /// <summary>Field number for the "dispatcher" field.</summary>
    public const int DispatcherFieldNumber = 5;
    private string dispatcher_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dispatcher {
      get { return dispatcher_; }
      set {
        dispatcher_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeployData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeployData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (!object.Equals(RouterConfig, other.RouterConfig)) return false;
      if (!object.Equals(Scope, other.Scope)) return false;
      if (Dispatcher != other.Dispatcher) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (routerConfig_ != null) hash ^= RouterConfig.GetHashCode();
      if (scope_ != null) hash ^= Scope.GetHashCode();
      if (Dispatcher.Length != 0) hash ^= Dispatcher.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (routerConfig_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RouterConfig);
      }
      if (scope_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Scope);
      }
      if (Dispatcher.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Dispatcher);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (routerConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RouterConfig);
      }
      if (scope_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scope);
      }
      if (Dispatcher.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dispatcher);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeployData other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          config_ = new global::Akka.Remote.Serialization.Proto.Msg.Payload();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.routerConfig_ != null) {
        if (routerConfig_ == null) {
          routerConfig_ = new global::Akka.Remote.Serialization.Proto.Msg.Payload();
        }
        RouterConfig.MergeFrom(other.RouterConfig);
      }
      if (other.scope_ != null) {
        if (scope_ == null) {
          scope_ = new global::Akka.Remote.Serialization.Proto.Msg.Payload();
        }
        Scope.MergeFrom(other.Scope);
      }
      if (other.Dispatcher.Length != 0) {
        Dispatcher = other.Dispatcher;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            if (config_ == null) {
              config_ = new global::Akka.Remote.Serialization.Proto.Msg.Payload();
            }
            input.ReadMessage(config_);
            break;
          }
          case 26: {
            if (routerConfig_ == null) {
              routerConfig_ = new global::Akka.Remote.Serialization.Proto.Msg.Payload();
            }
            input.ReadMessage(routerConfig_);
            break;
          }
          case 34: {
            if (scope_ == null) {
              scope_ = new global::Akka.Remote.Serialization.Proto.Msg.Payload();
            }
            input.ReadMessage(scope_);
            break;
          }
          case 42: {
            Dispatcher = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Message format of Akka Protocol. Message contains either a payload or an instruction.
  /// </summary>
  public sealed partial class AkkaProtocolMessage : pb::IMessage<AkkaProtocolMessage> {
    private static readonly pb::MessageParser<AkkaProtocolMessage> _parser = new pb::MessageParser<AkkaProtocolMessage>(() => new AkkaProtocolMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AkkaProtocolMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Akka.Remote.Serialization.Proto.Msg.WireFormatsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AkkaProtocolMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AkkaProtocolMessage(AkkaProtocolMessage other) : this() {
      payload_ = other.payload_;
      Instruction = other.instruction_ != null ? other.Instruction.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AkkaProtocolMessage Clone() {
      return new AkkaProtocolMessage(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instruction" field.</summary>
    public const int InstructionFieldNumber = 2;
    private global::Akka.Remote.Serialization.Proto.Msg.AkkaControlMessage instruction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Akka.Remote.Serialization.Proto.Msg.AkkaControlMessage Instruction {
      get { return instruction_; }
      set {
        instruction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AkkaProtocolMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AkkaProtocolMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Payload != other.Payload) return false;
      if (!object.Equals(Instruction, other.Instruction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (instruction_ != null) hash ^= Instruction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Payload.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Payload);
      }
      if (instruction_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Instruction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (instruction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Instruction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AkkaProtocolMessage other) {
      if (other == null) {
        return;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      if (other.instruction_ != null) {
        if (instruction_ == null) {
          instruction_ = new global::Akka.Remote.Serialization.Proto.Msg.AkkaControlMessage();
        }
        Instruction.MergeFrom(other.Instruction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Payload = input.ReadBytes();
            break;
          }
          case 18: {
            if (instruction_ == null) {
              instruction_ = new global::Akka.Remote.Serialization.Proto.Msg.AkkaControlMessage();
            }
            input.ReadMessage(instruction_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Defines some control messages for the remoting
  /// </summary>
  public sealed partial class AkkaControlMessage : pb::IMessage<AkkaControlMessage> {
    private static readonly pb::MessageParser<AkkaControlMessage> _parser = new pb::MessageParser<AkkaControlMessage>(() => new AkkaControlMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AkkaControlMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Akka.Remote.Serialization.Proto.Msg.WireFormatsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AkkaControlMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AkkaControlMessage(AkkaControlMessage other) : this() {
      commandType_ = other.commandType_;
      HandshakeInfo = other.handshakeInfo_ != null ? other.HandshakeInfo.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AkkaControlMessage Clone() {
      return new AkkaControlMessage(this);
    }

    /// <summary>Field number for the "commandType" field.</summary>
    public const int CommandTypeFieldNumber = 1;
    private global::Akka.Remote.Serialization.Proto.Msg.CommandType commandType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Akka.Remote.Serialization.Proto.Msg.CommandType CommandType {
      get { return commandType_; }
      set {
        commandType_ = value;
      }
    }

    /// <summary>Field number for the "handshakeInfo" field.</summary>
    public const int HandshakeInfoFieldNumber = 2;
    private global::Akka.Remote.Serialization.Proto.Msg.AkkaHandshakeInfo handshakeInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Akka.Remote.Serialization.Proto.Msg.AkkaHandshakeInfo HandshakeInfo {
      get { return handshakeInfo_; }
      set {
        handshakeInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AkkaControlMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AkkaControlMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CommandType != other.CommandType) return false;
      if (!object.Equals(HandshakeInfo, other.HandshakeInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CommandType != 0) hash ^= CommandType.GetHashCode();
      if (handshakeInfo_ != null) hash ^= HandshakeInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CommandType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CommandType);
      }
      if (handshakeInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(HandshakeInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CommandType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CommandType);
      }
      if (handshakeInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HandshakeInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AkkaControlMessage other) {
      if (other == null) {
        return;
      }
      if (other.CommandType != 0) {
        CommandType = other.CommandType;
      }
      if (other.handshakeInfo_ != null) {
        if (handshakeInfo_ == null) {
          handshakeInfo_ = new global::Akka.Remote.Serialization.Proto.Msg.AkkaHandshakeInfo();
        }
        HandshakeInfo.MergeFrom(other.HandshakeInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            commandType_ = (global::Akka.Remote.Serialization.Proto.Msg.CommandType) input.ReadEnum();
            break;
          }
          case 18: {
            if (handshakeInfo_ == null) {
              handshakeInfo_ = new global::Akka.Remote.Serialization.Proto.Msg.AkkaHandshakeInfo();
            }
            input.ReadMessage(handshakeInfo_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AkkaHandshakeInfo : pb::IMessage<AkkaHandshakeInfo> {
    private static readonly pb::MessageParser<AkkaHandshakeInfo> _parser = new pb::MessageParser<AkkaHandshakeInfo>(() => new AkkaHandshakeInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AkkaHandshakeInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Akka.Remote.Serialization.Proto.Msg.WireFormatsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AkkaHandshakeInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AkkaHandshakeInfo(AkkaHandshakeInfo other) : this() {
      Origin = other.origin_ != null ? other.Origin.Clone() : null;
      uid_ = other.uid_;
      cookie_ = other.cookie_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AkkaHandshakeInfo Clone() {
      return new AkkaHandshakeInfo(this);
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 1;
    private global::Akka.Remote.Serialization.Proto.Msg.AddressData origin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Akka.Remote.Serialization.Proto.Msg.AddressData Origin {
      get { return origin_; }
      set {
        origin_ = value;
      }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private ulong uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    /// <summary>Field number for the "cookie" field.</summary>
    public const int CookieFieldNumber = 3;
    private string cookie_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cookie {
      get { return cookie_; }
      set {
        cookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AkkaHandshakeInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AkkaHandshakeInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Origin, other.Origin)) return false;
      if (Uid != other.Uid) return false;
      if (Cookie != other.Cookie) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (origin_ != null) hash ^= Origin.GetHashCode();
      if (Uid != 0UL) hash ^= Uid.GetHashCode();
      if (Cookie.Length != 0) hash ^= Cookie.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (origin_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Origin);
      }
      if (Uid != 0UL) {
        output.WriteRawTag(17);
        output.WriteFixed64(Uid);
      }
      if (Cookie.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Cookie);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (origin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
      }
      if (Uid != 0UL) {
        size += 1 + 8;
      }
      if (Cookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cookie);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AkkaHandshakeInfo other) {
      if (other == null) {
        return;
      }
      if (other.origin_ != null) {
        if (origin_ == null) {
          origin_ = new global::Akka.Remote.Serialization.Proto.Msg.AddressData();
        }
        Origin.MergeFrom(other.Origin);
      }
      if (other.Uid != 0UL) {
        Uid = other.Uid;
      }
      if (other.Cookie.Length != 0) {
        Cookie = other.Cookie;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (origin_ == null) {
              origin_ = new global::Akka.Remote.Serialization.Proto.Msg.AddressData();
            }
            input.ReadMessage(origin_);
            break;
          }
          case 17: {
            Uid = input.ReadFixed64();
            break;
          }
          case 26: {
            Cookie = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoteScope : pb::IMessage<RemoteScope> {
    private static readonly pb::MessageParser<RemoteScope> _parser = new pb::MessageParser<RemoteScope>(() => new RemoteScope());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoteScope> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Akka.Remote.Serialization.Proto.Msg.WireFormatsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoteScope() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoteScope(RemoteScope other) : this() {
      Node = other.node_ != null ? other.Node.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoteScope Clone() {
      return new RemoteScope(this);
    }

    /// <summary>Field number for the "node" field.</summary>
    public const int NodeFieldNumber = 1;
    private global::Akka.Remote.Serialization.Proto.Msg.AddressData node_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Akka.Remote.Serialization.Proto.Msg.AddressData Node {
      get { return node_; }
      set {
        node_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoteScope);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoteScope other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Node, other.Node)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (node_ != null) hash ^= Node.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (node_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Node);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (node_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Node);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoteScope other) {
      if (other == null) {
        return;
      }
      if (other.node_ != null) {
        if (node_ == null) {
          node_ = new global::Akka.Remote.Serialization.Proto.Msg.AddressData();
        }
        Node.MergeFrom(other.Node);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (node_ == null) {
              node_ = new global::Akka.Remote.Serialization.Proto.Msg.AddressData();
            }
            input.ReadMessage(node_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DefaultResizer : pb::IMessage<DefaultResizer> {
    private static readonly pb::MessageParser<DefaultResizer> _parser = new pb::MessageParser<DefaultResizer>(() => new DefaultResizer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DefaultResizer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Akka.Remote.Serialization.Proto.Msg.WireFormatsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefaultResizer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefaultResizer(DefaultResizer other) : this() {
      lowerBound_ = other.lowerBound_;
      upperBound_ = other.upperBound_;
      pressureThreshold_ = other.pressureThreshold_;
      rampupRate_ = other.rampupRate_;
      backoffThreshold_ = other.backoffThreshold_;
      backoffRate_ = other.backoffRate_;
      messagesPerResize_ = other.messagesPerResize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefaultResizer Clone() {
      return new DefaultResizer(this);
    }

    /// <summary>Field number for the "lowerBound" field.</summary>
    public const int LowerBoundFieldNumber = 1;
    private uint lowerBound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint LowerBound {
      get { return lowerBound_; }
      set {
        lowerBound_ = value;
      }
    }

    /// <summary>Field number for the "upperBound" field.</summary>
    public const int UpperBoundFieldNumber = 2;
    private uint upperBound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UpperBound {
      get { return upperBound_; }
      set {
        upperBound_ = value;
      }
    }

    /// <summary>Field number for the "pressureThreshold" field.</summary>
    public const int PressureThresholdFieldNumber = 3;
    private uint pressureThreshold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PressureThreshold {
      get { return pressureThreshold_; }
      set {
        pressureThreshold_ = value;
      }
    }

    /// <summary>Field number for the "rampupRate" field.</summary>
    public const int RampupRateFieldNumber = 4;
    private double rampupRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double RampupRate {
      get { return rampupRate_; }
      set {
        rampupRate_ = value;
      }
    }

    /// <summary>Field number for the "backoffThreshold" field.</summary>
    public const int BackoffThresholdFieldNumber = 5;
    private double backoffThreshold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double BackoffThreshold {
      get { return backoffThreshold_; }
      set {
        backoffThreshold_ = value;
      }
    }

    /// <summary>Field number for the "backoffRate" field.</summary>
    public const int BackoffRateFieldNumber = 6;
    private double backoffRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double BackoffRate {
      get { return backoffRate_; }
      set {
        backoffRate_ = value;
      }
    }

    /// <summary>Field number for the "messagesPerResize" field.</summary>
    public const int MessagesPerResizeFieldNumber = 7;
    private uint messagesPerResize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MessagesPerResize {
      get { return messagesPerResize_; }
      set {
        messagesPerResize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DefaultResizer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DefaultResizer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LowerBound != other.LowerBound) return false;
      if (UpperBound != other.UpperBound) return false;
      if (PressureThreshold != other.PressureThreshold) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RampupRate, other.RampupRate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BackoffThreshold, other.BackoffThreshold)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BackoffRate, other.BackoffRate)) return false;
      if (MessagesPerResize != other.MessagesPerResize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LowerBound != 0) hash ^= LowerBound.GetHashCode();
      if (UpperBound != 0) hash ^= UpperBound.GetHashCode();
      if (PressureThreshold != 0) hash ^= PressureThreshold.GetHashCode();
      if (RampupRate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RampupRate);
      if (BackoffThreshold != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BackoffThreshold);
      if (BackoffRate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BackoffRate);
      if (MessagesPerResize != 0) hash ^= MessagesPerResize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LowerBound != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(LowerBound);
      }
      if (UpperBound != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(UpperBound);
      }
      if (PressureThreshold != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PressureThreshold);
      }
      if (RampupRate != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(RampupRate);
      }
      if (BackoffThreshold != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(BackoffThreshold);
      }
      if (BackoffRate != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(BackoffRate);
      }
      if (MessagesPerResize != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(MessagesPerResize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LowerBound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LowerBound);
      }
      if (UpperBound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UpperBound);
      }
      if (PressureThreshold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PressureThreshold);
      }
      if (RampupRate != 0D) {
        size += 1 + 8;
      }
      if (BackoffThreshold != 0D) {
        size += 1 + 8;
      }
      if (BackoffRate != 0D) {
        size += 1 + 8;
      }
      if (MessagesPerResize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MessagesPerResize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DefaultResizer other) {
      if (other == null) {
        return;
      }
      if (other.LowerBound != 0) {
        LowerBound = other.LowerBound;
      }
      if (other.UpperBound != 0) {
        UpperBound = other.UpperBound;
      }
      if (other.PressureThreshold != 0) {
        PressureThreshold = other.PressureThreshold;
      }
      if (other.RampupRate != 0D) {
        RampupRate = other.RampupRate;
      }
      if (other.BackoffThreshold != 0D) {
        BackoffThreshold = other.BackoffThreshold;
      }
      if (other.BackoffRate != 0D) {
        BackoffRate = other.BackoffRate;
      }
      if (other.MessagesPerResize != 0) {
        MessagesPerResize = other.MessagesPerResize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LowerBound = input.ReadUInt32();
            break;
          }
          case 16: {
            UpperBound = input.ReadUInt32();
            break;
          }
          case 24: {
            PressureThreshold = input.ReadUInt32();
            break;
          }
          case 33: {
            RampupRate = input.ReadDouble();
            break;
          }
          case 41: {
            BackoffThreshold = input.ReadDouble();
            break;
          }
          case 49: {
            BackoffRate = input.ReadDouble();
            break;
          }
          case 56: {
            MessagesPerResize = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FromConfig : pb::IMessage<FromConfig> {
    private static readonly pb::MessageParser<FromConfig> _parser = new pb::MessageParser<FromConfig>(() => new FromConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FromConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Akka.Remote.Serialization.Proto.Msg.WireFormatsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FromConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FromConfig(FromConfig other) : this() {
      Resizer = other.resizer_ != null ? other.Resizer.Clone() : null;
      routerDispatcher_ = other.routerDispatcher_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FromConfig Clone() {
      return new FromConfig(this);
    }

    /// <summary>Field number for the "resizer" field.</summary>
    public const int ResizerFieldNumber = 1;
    private global::Akka.Remote.Serialization.Proto.Msg.Payload resizer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Akka.Remote.Serialization.Proto.Msg.Payload Resizer {
      get { return resizer_; }
      set {
        resizer_ = value;
      }
    }

    /// <summary>Field number for the "routerDispatcher" field.</summary>
    public const int RouterDispatcherFieldNumber = 2;
    private string routerDispatcher_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RouterDispatcher {
      get { return routerDispatcher_; }
      set {
        routerDispatcher_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FromConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FromConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Resizer, other.Resizer)) return false;
      if (RouterDispatcher != other.RouterDispatcher) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resizer_ != null) hash ^= Resizer.GetHashCode();
      if (RouterDispatcher.Length != 0) hash ^= RouterDispatcher.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (resizer_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Resizer);
      }
      if (RouterDispatcher.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RouterDispatcher);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resizer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resizer);
      }
      if (RouterDispatcher.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RouterDispatcher);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FromConfig other) {
      if (other == null) {
        return;
      }
      if (other.resizer_ != null) {
        if (resizer_ == null) {
          resizer_ = new global::Akka.Remote.Serialization.Proto.Msg.Payload();
        }
        Resizer.MergeFrom(other.Resizer);
      }
      if (other.RouterDispatcher.Length != 0) {
        RouterDispatcher = other.RouterDispatcher;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (resizer_ == null) {
              resizer_ = new global::Akka.Remote.Serialization.Proto.Msg.Payload();
            }
            input.ReadMessage(resizer_);
            break;
          }
          case 18: {
            RouterDispatcher = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GenericRoutingPool : pb::IMessage<GenericRoutingPool> {
    private static readonly pb::MessageParser<GenericRoutingPool> _parser = new pb::MessageParser<GenericRoutingPool>(() => new GenericRoutingPool());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GenericRoutingPool> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Akka.Remote.Serialization.Proto.Msg.WireFormatsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenericRoutingPool() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenericRoutingPool(GenericRoutingPool other) : this() {
      nrOfInstances_ = other.nrOfInstances_;
      routerDispatcher_ = other.routerDispatcher_;
      usePoolDispatcher_ = other.usePoolDispatcher_;
      Resizer = other.resizer_ != null ? other.Resizer.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenericRoutingPool Clone() {
      return new GenericRoutingPool(this);
    }

    /// <summary>Field number for the "nrOfInstances" field.</summary>
    public const int NrOfInstancesFieldNumber = 1;
    private uint nrOfInstances_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NrOfInstances {
      get { return nrOfInstances_; }
      set {
        nrOfInstances_ = value;
      }
    }

    /// <summary>Field number for the "routerDispatcher" field.</summary>
    public const int RouterDispatcherFieldNumber = 2;
    private string routerDispatcher_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RouterDispatcher {
      get { return routerDispatcher_; }
      set {
        routerDispatcher_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "usePoolDispatcher" field.</summary>
    public const int UsePoolDispatcherFieldNumber = 3;
    private bool usePoolDispatcher_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UsePoolDispatcher {
      get { return usePoolDispatcher_; }
      set {
        usePoolDispatcher_ = value;
      }
    }

    /// <summary>Field number for the "resizer" field.</summary>
    public const int ResizerFieldNumber = 4;
    private global::Akka.Remote.Serialization.Proto.Msg.Payload resizer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Akka.Remote.Serialization.Proto.Msg.Payload Resizer {
      get { return resizer_; }
      set {
        resizer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GenericRoutingPool);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GenericRoutingPool other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NrOfInstances != other.NrOfInstances) return false;
      if (RouterDispatcher != other.RouterDispatcher) return false;
      if (UsePoolDispatcher != other.UsePoolDispatcher) return false;
      if (!object.Equals(Resizer, other.Resizer)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NrOfInstances != 0) hash ^= NrOfInstances.GetHashCode();
      if (RouterDispatcher.Length != 0) hash ^= RouterDispatcher.GetHashCode();
      if (UsePoolDispatcher != false) hash ^= UsePoolDispatcher.GetHashCode();
      if (resizer_ != null) hash ^= Resizer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NrOfInstances != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(NrOfInstances);
      }
      if (RouterDispatcher.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RouterDispatcher);
      }
      if (UsePoolDispatcher != false) {
        output.WriteRawTag(24);
        output.WriteBool(UsePoolDispatcher);
      }
      if (resizer_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Resizer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NrOfInstances != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NrOfInstances);
      }
      if (RouterDispatcher.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RouterDispatcher);
      }
      if (UsePoolDispatcher != false) {
        size += 1 + 1;
      }
      if (resizer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resizer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GenericRoutingPool other) {
      if (other == null) {
        return;
      }
      if (other.NrOfInstances != 0) {
        NrOfInstances = other.NrOfInstances;
      }
      if (other.RouterDispatcher.Length != 0) {
        RouterDispatcher = other.RouterDispatcher;
      }
      if (other.UsePoolDispatcher != false) {
        UsePoolDispatcher = other.UsePoolDispatcher;
      }
      if (other.resizer_ != null) {
        if (resizer_ == null) {
          resizer_ = new global::Akka.Remote.Serialization.Proto.Msg.Payload();
        }
        Resizer.MergeFrom(other.Resizer);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NrOfInstances = input.ReadUInt32();
            break;
          }
          case 18: {
            RouterDispatcher = input.ReadString();
            break;
          }
          case 24: {
            UsePoolDispatcher = input.ReadBool();
            break;
          }
          case 34: {
            if (resizer_ == null) {
              resizer_ = new global::Akka.Remote.Serialization.Proto.Msg.Payload();
            }
            input.ReadMessage(resizer_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ScatterGatherPool : pb::IMessage<ScatterGatherPool> {
    private static readonly pb::MessageParser<ScatterGatherPool> _parser = new pb::MessageParser<ScatterGatherPool>(() => new ScatterGatherPool());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScatterGatherPool> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Akka.Remote.Serialization.Proto.Msg.WireFormatsReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScatterGatherPool() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScatterGatherPool(ScatterGatherPool other) : this() {
      Generic = other.generic_ != null ? other.Generic.Clone() : null;
      Within = other.within_ != null ? other.Within.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScatterGatherPool Clone() {
      return new ScatterGatherPool(this);
    }

    /// <summary>Field number for the "generic" field.</summary>
    public const int GenericFieldNumber = 1;
    private global::Akka.Remote.Serialization.Proto.Msg.GenericRoutingPool generic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Akka.Remote.Serialization.Proto.Msg.GenericRoutingPool Generic {
      get { return generic_; }
      set {
        generic_ = value;
      }
    }

    /// <summary>Field number for the "within" field.</summary>
    public const int WithinFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Duration within_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration Within {
      get { return within_; }
      set {
        within_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScatterGatherPool);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScatterGatherPool other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Generic, other.Generic)) return false;
      if (!object.Equals(Within, other.Within)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (generic_ != null) hash ^= Generic.GetHashCode();
      if (within_ != null) hash ^= Within.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (generic_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Generic);
      }
      if (within_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Within);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (generic_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Generic);
      }
      if (within_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Within);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScatterGatherPool other) {
      if (other == null) {
        return;
      }
      if (other.generic_ != null) {
        if (generic_ == null) {
          generic_ = new global::Akka.Remote.Serialization.Proto.Msg.GenericRoutingPool();
        }
        Generic.MergeFrom(other.Generic);
      }
      if (other.within_ != null) {
        if (within_ == null) {
          within_ = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Within.MergeFrom(other.Within);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (generic_ == null) {
              generic_ = new global::Akka.Remote.Serialization.Proto.Msg.GenericRoutingPool();
            }
            input.ReadMessage(generic_);
            break;
          }
          case 18: {
            if (within_ == null) {
              within_ = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(within_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TailChoppingPool : pb::IMessage<TailChoppingPool> {
    private static readonly pb::MessageParser<TailChoppingPool> _parser = new pb::MessageParser<TailChoppingPool>(() => new TailChoppingPool());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TailChoppingPool> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Akka.Remote.Serialization.Proto.Msg.WireFormatsReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TailChoppingPool() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TailChoppingPool(TailChoppingPool other) : this() {
      Generic = other.generic_ != null ? other.Generic.Clone() : null;
      Within = other.within_ != null ? other.Within.Clone() : null;
      Interval = other.interval_ != null ? other.Interval.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TailChoppingPool Clone() {
      return new TailChoppingPool(this);
    }

    /// <summary>Field number for the "generic" field.</summary>
    public const int GenericFieldNumber = 1;
    private global::Akka.Remote.Serialization.Proto.Msg.GenericRoutingPool generic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Akka.Remote.Serialization.Proto.Msg.GenericRoutingPool Generic {
      get { return generic_; }
      set {
        generic_ = value;
      }
    }

    /// <summary>Field number for the "within" field.</summary>
    public const int WithinFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Duration within_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration Within {
      get { return within_; }
      set {
        within_ = value;
      }
    }

    /// <summary>Field number for the "interval" field.</summary>
    public const int IntervalFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Duration interval_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration Interval {
      get { return interval_; }
      set {
        interval_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TailChoppingPool);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TailChoppingPool other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Generic, other.Generic)) return false;
      if (!object.Equals(Within, other.Within)) return false;
      if (!object.Equals(Interval, other.Interval)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (generic_ != null) hash ^= Generic.GetHashCode();
      if (within_ != null) hash ^= Within.GetHashCode();
      if (interval_ != null) hash ^= Interval.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (generic_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Generic);
      }
      if (within_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Within);
      }
      if (interval_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Interval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (generic_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Generic);
      }
      if (within_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Within);
      }
      if (interval_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Interval);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TailChoppingPool other) {
      if (other == null) {
        return;
      }
      if (other.generic_ != null) {
        if (generic_ == null) {
          generic_ = new global::Akka.Remote.Serialization.Proto.Msg.GenericRoutingPool();
        }
        Generic.MergeFrom(other.Generic);
      }
      if (other.within_ != null) {
        if (within_ == null) {
          within_ = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Within.MergeFrom(other.Within);
      }
      if (other.interval_ != null) {
        if (interval_ == null) {
          interval_ = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Interval.MergeFrom(other.Interval);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (generic_ == null) {
              generic_ = new global::Akka.Remote.Serialization.Proto.Msg.GenericRoutingPool();
            }
            input.ReadMessage(generic_);
            break;
          }
          case 18: {
            if (within_ == null) {
              within_ = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(within_);
            break;
          }
          case 26: {
            if (interval_ == null) {
              interval_ = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(interval_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoteRouterConfig : pb::IMessage<RemoteRouterConfig> {
    private static readonly pb::MessageParser<RemoteRouterConfig> _parser = new pb::MessageParser<RemoteRouterConfig>(() => new RemoteRouterConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoteRouterConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Akka.Remote.Serialization.Proto.Msg.WireFormatsReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoteRouterConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoteRouterConfig(RemoteRouterConfig other) : this() {
      Local = other.local_ != null ? other.Local.Clone() : null;
      nodes_ = other.nodes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoteRouterConfig Clone() {
      return new RemoteRouterConfig(this);
    }

    /// <summary>Field number for the "local" field.</summary>
    public const int LocalFieldNumber = 1;
    private global::Akka.Remote.Serialization.Proto.Msg.Payload local_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Akka.Remote.Serialization.Proto.Msg.Payload Local {
      get { return local_; }
      set {
        local_ = value;
      }
    }

    /// <summary>Field number for the "nodes" field.</summary>
    public const int NodesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Akka.Remote.Serialization.Proto.Msg.AddressData> _repeated_nodes_codec
        = pb::FieldCodec.ForMessage(18, global::Akka.Remote.Serialization.Proto.Msg.AddressData.Parser);
    private readonly pbc::RepeatedField<global::Akka.Remote.Serialization.Proto.Msg.AddressData> nodes_ = new pbc::RepeatedField<global::Akka.Remote.Serialization.Proto.Msg.AddressData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Akka.Remote.Serialization.Proto.Msg.AddressData> Nodes {
      get { return nodes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoteRouterConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoteRouterConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Local, other.Local)) return false;
      if(!nodes_.Equals(other.nodes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (local_ != null) hash ^= Local.GetHashCode();
      hash ^= nodes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (local_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Local);
      }
      nodes_.WriteTo(output, _repeated_nodes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (local_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Local);
      }
      size += nodes_.CalculateSize(_repeated_nodes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoteRouterConfig other) {
      if (other == null) {
        return;
      }
      if (other.local_ != null) {
        if (local_ == null) {
          local_ = new global::Akka.Remote.Serialization.Proto.Msg.Payload();
        }
        Local.MergeFrom(other.Local);
      }
      nodes_.Add(other.nodes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (local_ == null) {
              local_ = new global::Akka.Remote.Serialization.Proto.Msg.Payload();
            }
            input.ReadMessage(local_);
            break;
          }
          case 18: {
            nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
